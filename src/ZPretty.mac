ROUTINE ZPretty
ZPretty ; make JSON readable
#; input= JSON string | stream | %DynamicAbstractObject
#; indent filler  ; "" => no indent         
#define fill "  "
#; New line code   ; "" => no Lines
#define crlf $c(13,10)

Do(input,fil,nl) public {
    S fil=$g(fil,$$$fill),nl=$g(nl,$$$crlf), sc=1,res="",indt=""
    I $iso(input),input.%IsA("%Library.DynamicAbstractObject") S obj=input
    E  S obj=##class(%Library.DynamicAbstractObject).%FromJSON(input)
    S stc=0,ito=obj.%GetIterator(),sep=""
        ,jtyp=$s(obj.%IsA("%Library.DynamicObject"):"object",1:"array")
        ,ist(stc)=ito, cst(stc)=obj, tst(stc)=jtyp
    I $i(stc)
    S res=res_$s(jtyp="object":"{",1:"["), indt=indt_fil
    F { S isito=ito.%IsA("%Iterator.Object")
        I ito.%GetNext(.key,.val) {
	        S jtyp=$CASE(obj.%GetTypeCodeOf(key),0:"null"
	                        ,1:"boolean",2:"boolean",3:"number",4:"number"
	                        ,6:"array",7:"object",8:"string",9:"number"
	                        ,10:"illegalvalue"
	                        ,11:"number",12:"oref",13:"unassigned"
	                        ,14:"number",15:"number",16:"string"
	                        ,18:"number",19:"number",20:"string"
	                        ,31:"unassigned",:"UNKNOWN")
            S res=res_sep_nl_indt, sep="," }
		Else {
            S indt=$e(indt,1,*-$l(nl)), res=res_nl_indt, res=res_$s(isito:"}",1:"]")
            Q:'$i(stc,-1)
            S ito=ist(stc), obj=cst(stc), jtyp=tst(stc), sep=","
            Continue }
        I isito S res=res_""""_key_""":"
        I (jtyp="object") || (jtyp="array") {
            S ist(stc)=ito, cst(stc)=obj, tst(stc)=jtyp, sep=""
            I $i(stc)
            S ito=val.%GetIterator(),obj=val, indt=indt_fil
            	,res=res_$s(jtyp="object":"{",1:"[")
        } ElseIf jtyp="string" { S res=res_""""_$zcvt(val,"O","JSON")_""""
        } ElseIf jtyp="boolean" { S res=res_$s(val:"true",1:"false")
        } ElseIf jtyp="null" { S res=res_"null"
        } Else { I $e(val)="." S val="0"_val
            I $e(val,1,2)="-." S val="-0."_$e(val,3,*)
            S res=res_val } }
    Q res } 
